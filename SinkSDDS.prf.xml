<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties PUBLIC "-//JTRS//DTD SCA V2.2.2 PRF//EN" "properties.dtd">
<properties>
  <struct id="network_settings" mode="readwrite">
    <description>Setting for the network connection.</description>
    <simple id="network_settings::interface" mode="readwrite" name="interface" type="string">
      <description>Network interface used to send UDP/multicast, e.g. eth0, eth1, etc.</description>
      <value>eth0</value>
      <action type="external"/>
    </simple>
    <simple id="network_settings::ip_address" mode="readwrite" name="ip_address" type="string">
      <description>UDP/multicast address or group ID to publish data to.</description>
      <value>127.0.0.1</value>
      <action type="external"/>
    </simple>
    <simple id="network_settings::port" mode="readwrite" name="port" type="long">
      <description>UDP/multicast port used to publish data.</description>
      <value>29495</value>
      <action type="external"/>
    </simple>
    <simple id="network_settings::vlan" mode="readwrite" name="vlan" type="ushort">
      <description>Virtual Lan address to use. Default to 0</description>
      <value>0</value>
      <action type="external"/>
    </simple>
    <configurationkind kindtype="property"/>
  </struct>
  <struct id="sdds_settings" mode="readwrite">
    <description>SDDS Packet Settings</description>
    <simple id="sdds_settings::standard_format" mode="readwrite" name="standard_format" type="short">
      <description>The SF (Standard Format) field is used to identify whether or not the packet conforms to the SDDS standard. For SDDS standard packets, the SF bit shall be set to a value of 1. The SF bit shall b eset to a value of zero for non-standard packets.</description>
      <value>1</value>
      <action type="external"/>
    </simple>
    <simple id="sdds_settings::original_format" mode="readwrite" name="original_format" type="short">
      <description>The OF (Original Format) field identifies the original format of the data transmitted. If the data was originally offset binary and has been converted to 2's complement, the OF value is set to one. Otherwise, the data is 2's complement and has not been converted and the OF value is set to zero.</description>
      <value>0</value>
      <action type="external"/>
    </simple>
    <simple id="sdds_settings::spectral_sense" mode="readwrite" name="spectral_sense" type="short">
      <description>The SS (Spectral Sense) field identifiees whether or not the spectral sense has been inverted from the original input. The SS value is set to one if the spectral sense has been inverted. The SS value is set to zero if the spectral sense has not been inverted.</description>
      <value>0</value>
      <action type="external"/>
    </simple>
    <simple id="sdds_settings::user_id" mode="readwrite" name="user_id" type="string">
      <description>Used as a parameter to the attach call.</description>
      <value>anonymous</value>
      <action type="external"/>
    </simple>
    <simple id="sdds_settings::endian_representation" mode="readwrite" name="endian_representation" type="long">
      <description>The endianness (Big or Little) of the data portion of the SDDS packet. Defaults to Network Byte Order (Big Endian)</description>
      <value>1</value>
      <enumerations>
        <enumeration label="LITTLE_ENDIAN" value="0"/>
        <enumeration label="BIG_ENDIAN" value="1"/>
      </enumerations>
      <action type="external"/>
    </simple>
    <simple id="sdds_settings::time_tag_valid" name="time_tag_valid" type="boolean">
      <description>Used only in the attach call. The attach call is made prior to the bulkIO TimeStamp being available so the true BULKIO::TCS_VALID flag cannot be checked. This is only used during the call to attach.</description>
      <value>true</value>
    </simple>
    <configurationkind kindtype="property"/>
  </struct>
</properties>
